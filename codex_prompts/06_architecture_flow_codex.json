{
  "id": "06-architecture-flow-codex",
  "title": "Architecture Flow Q&A (OpenAI Codex)",
  "category": "codex_prompts",
  "author": "openai",
  "created": "2025-08-12",
  "last_modified": "2025-08-12",
  "tested_model": "gpt-4",
  "temperature": 0.2,
  "tags": [],
  "prompt": {
    "purpose": "Trace a request from client endpoint to database and document the flow with a Mermaid diagram.",
    "context": "- Repository includes client, server and data layers.\n- Caller specifies an HTTP endpoint or function entry point.",
    "instructions": "1. Follow the call chain from the given entry point to persistence.\n2. List key modules, validations, and third-party services touched.\n3. Produce a `mermaidjs` sequence or flow diagram.\n4. Highlight potential bottlenecks or failure points.\n5. Suggest questions for deeper audits if pieces of the path are unclear.",
    "inputs": "- {{entry_point}}: endpoint or function to begin tracing.",
    "output_format": "- Markdown explanation of each hop.\n- Fenced code block containing the Mermaid diagram.",
    "additional_notes": "Use greppable identifiers for functions and files so users can cross-reference quickly.",
    "example_usage": "> Document and create a mermaidjs diagram of the full request flow from `/api/orders` to the database.",
    "references": ""
  }
}
