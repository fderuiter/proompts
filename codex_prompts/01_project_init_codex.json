{
  "id": "01-project-init-codex",
  "title": "Project Init & Skeleton (OpenAI Codex)",
  "category": "codex_prompts",
  "author": "fderuiter",
  "created": "2025-07-18",
  "last_modified": "2025-07-18",
  "tested_model": "gpt-4",
  "temperature": 0.2,
  "tags": [],
  "prompt": {
    "purpose": "Spin up a brand-new repository with a minimal but runnable skeleton, plus a one-command local dev experience.",
    "context": "- Caller will supply language/framework, package manager and licence preferences.\n- Expect a `.env.example` file with `OPENAI_API_KEY=`.\n- Include a helper module (`src/openaiClient.ts` or `openai_client.py`) that wraps `openai` calls.\n- Assume **GitHub** remote unless the caller overrides it.",
    "instructions": "<!-- markdownlint-disable MD002 -->\n\n1. **Ask the caller** for project name, language/framework, package manager and whether it\u2019s a monorepo.\n1. Generate a folder tree, a \u201cHello, Codex \ud83d\ude80\u201d module, standard docs (`README.md`, `.gitignore`, etc.) and a task runner.\n1. **Respond with** exact shell commands and the full text of each generated file.",
    "inputs": "",
    "output_format": "",
    "additional_notes": "- If monorepo = yes, scaffold `packages/` with tooling placeholders.\n- All generated code should compile / run without extra tweaks.",
    "example_usage": "> Paste this prompt into ChatGPT, answer the four questions it asks, then copy the shell commands and file snippets into your editor/terminal.",
    "references": "- [Org Directory Layout Guide](../docs/architecture/layout.md)"
  }
}