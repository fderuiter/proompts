# yamllint disable rule:line-length
---
name: Set Up Docker and Developer Experience for FastAPI
description: Creates a one-command development setup using Docker, Docker Compose, and a Makefile.
model: gpt-4o-mini
modelParameters:
  temperature: 0.2
messages:
  - role: system
    content: |
      Your task is to create a seamless "one-command" local development environment for the new FastAPI project.

      Please follow these steps meticulously:
  - role: user
    content: |
      1.  **Analyze Containerization Needs**:
          - Review the project structure to plan the Docker setup, noting the required services: `api`, `db`, `cache`, `broker`.

      2.  **Implement Optimized Dockerfile**:
          - Write a multi-stage `Dockerfile` that creates a slim, secure production image running as a non-root user with a production ASGI server.
          - Create a comprehensive `.dockerignore` file.

      3.  **Implement Docker Compose and Makefile**:
          - Write a `docker-compose.yml` file to define and link all services, ensuring the `api` service uses live-reloading for development.
          - Write a `Makefile` that abstracts away Docker commands, providing targets for `setup`, `up`, `down`, `test`, `lint`, `fmt`, and `shell`.

      4.  **Validate the Developer Experience**:
          - From a fresh clone, run `make setup && make up` to verify the entire stack starts correctly.
          - Test each Makefile target to ensure it functions as described.
          - Confirm the `api` service live-reloads when a code file is saved.
          - Update the `README.md` with the new setup instructions.
