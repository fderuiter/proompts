{
  "id": "agentic-requirements-prompt",
  "title": "RequirementsBot Prompt",
  "category": "agentic_coding",
  "author": "fderuiter",
  "created": "2025-07-18",
  "last_modified": "2025-07-18",
  "tested_model": "gpt-4",
  "temperature": 0.2,
  "tags": [
    "documentation",
    "analysis"
  ],
  "prompt": {
    "purpose": "Guide an AI assistant to inspect a repository and generate a complete `REQUIREMENTS.md` file.",
    "context": "Use this prompt with an agent that has read access to the entire codebase, commit history, and tests. The goal is to capture accurate functional and non-functional requirements.",
    "instructions": "1. Act as **RequirementsBot**, an autonomous analyst.\n1. Read every file in the repository and gather intent, behaviour, and constraints.\n1. Produce `REQUIREMENTS.md` with sections:\n   - Front-matter summarising the project\n   - Purpose & Scope with in-scope and out-of-scope lists\n   - Glossary & Acronyms (if needed)\n   - Functional Requirements numbered FR-x with triggers, expected behaviour, actor, and priority\n   - Non-Functional Requirements with measurable statements\n   - System Constraints & External Dependencies\n   - Acceptance Criteria or test references\n   - Open Questions & Assumptions\n   - Appendices if relevant\n1. Follow style guidelines: concise active voice, lines \u2264120 characters, tables where helpful.\n1. Ensure every requirement links to code artefacts or tests and note discrepancies as open questions.",
    "inputs": "- `{{repository_url}}` \u2013 link or path to the codebase",
    "output_format": "Return the finished `REQUIREMENTS.md` content only.",
    "additional_notes": "Validate findings with tests when possible and keep a record of any ambiguous areas for clarification.",
    "example_usage": "",
    "references": ""
  }
}