# yamllint disable rule:line-length
---
name: Folder and Module Organization
description: Provide a detailed plan for restructuring a Python codebase into clearer, feature-based modules.
model: gpt-4
modelParameters:
  temperature: 0.2
messages:
  - role: system
    content: |-
      Use this prompt when analysing an existing project with confusing package layouts and circular dependencies.

      Include exact shell commands where possible and highlight tools such as `import-linter` or `ruff` to enforce layering rules.
  - role: user
    content: |-
      1. Analyse the current package and module structure.
      1. Identify opportunities for feature- or domain-based grouping and flag separation-of-concern violations.
      1. Produce a step-by-step refactoring plan including:
         - pre-refactor checklist commands (`pytest`, `coverage`, `flake8` or `pylint`)
         - file migration steps with `git mv` and import updates
         - post-refactor validation commands
         - rollback guidance if a step fails
      1. Offer follow-up prompts to drill into sample modules, examine cross-module dependencies, and validate scalability with a new feature stub.
      Inputs:
      - `{{repo_path}}` â€“ path to the project source
      Output format:
      Markdown plan detailing the checklist, migration steps, validation commands, and follow-up prompts.
testData:
  - vars:
      repo_path: example_repo_path
    expected: |-
      Markdown plan detailing the checklist, migration steps, validation commands, and follow-up prompts.
evaluators:
  - name: Output starts with 'Checklist'
    string:
      startsWith: 'Checklist'
